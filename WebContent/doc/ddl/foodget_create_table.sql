ALTER TABLE member_detail
	DROP
		CONSTRAINT FK_TABLE_TO_member_detail
		CASCADE;

ALTER TABLE REPLY
	DROP
		CONSTRAINT FK_STORE_TO_REPLY
		CASCADE;

ALTER TABLE SCORE
	DROP
		CONSTRAINT FK_STORE_TO_SCORE
		CASCADE;

ALTER TABLE FOOD_LIKE
	DROP
		CONSTRAINT FK_STORE_TO_FOOD_LIKE
		CASCADE;

ALTER TABLE FOOD_LIKE
	DROP
		CONSTRAINT FK_MEMBER_TO_FOOD_LIKE
		CASCADE;

ALTER TABLE PREFERENCE
	DROP
		CONSTRAINT FK_MEMBER_TO_PREFERENCE
		CASCADE;

ALTER TABLE member_detail
	DROP
		PRIMARY KEY
		CASCADE
		KEEP INDEX;

ALTER TABLE STORE
	DROP
		PRIMARY KEY
		CASCADE
		KEEP INDEX;

ALTER TABLE REPLY
	DROP
		PRIMARY KEY
		CASCADE
		KEEP INDEX;

ALTER TABLE MEMBER
	DROP
		PRIMARY KEY
		CASCADE
		KEEP INDEX;

DROP INDEX PK_member_detail;

DROP INDEX PK_STORE;

DROP INDEX PK_REPLY;

DROP INDEX PK_MEMBER;

/* 회원상세정보 */
DROP TABLE member_detail 
	CASCADE CONSTRAINTS;

/* 맛집 */
DROP TABLE STORE 
	CASCADE CONSTRAINTS;

/* 검색 */
DROP TABLE SEARCH 
	CASCADE CONSTRAINTS;

/* 댓글 */
DROP TABLE REPLY 
	CASCADE CONSTRAINTS;

/* 점수 */
DROP TABLE SCORE 
	CASCADE CONSTRAINTS;

/* 좋아요 */
DROP TABLE FOOD_LIKE 
	CASCADE CONSTRAINTS;

/* 회원 */
DROP TABLE MEMBER 
	CASCADE CONSTRAINTS;

/* 선호도 */
DROP TABLE PREFERENCE 
	CASCADE CONSTRAINTS;

/* 회원상세정보 */
CREATE TABLE member_detail (
	id VARCHAR2(16) NOT NULL, /* 아이디 */
	zip1 VARCHAR2(3), /* 우편번호1 */
	zip2 VARCHAR2(3), /* 우편번호2 */
	addr1 VARCHAR(100), /* 기본주소 */
	addr2 VARCHAR(100), /* 상세주소 */
	tel1 VARCHAR2(3), /* 전화번호1 */
	tel2 VARCHAR2(4), /* 전화번호2 */
	tel3 VARCHAR2(4) /* 전화번호3 */
);

COMMENT ON TABLE member_detail IS '회원상세정보';

COMMENT ON COLUMN member_detail.id IS '아이디';

COMMENT ON COLUMN member_detail.zip1 IS '우편번호1';

COMMENT ON COLUMN member_detail.zip2 IS '우편번호2';

COMMENT ON COLUMN member_detail.addr1 IS '기본주소';

COMMENT ON COLUMN member_detail.addr2 IS '상세주소';

COMMENT ON COLUMN member_detail.tel1 IS '전화번호1';

COMMENT ON COLUMN member_detail.tel2 IS '전화번호2';

COMMENT ON COLUMN member_detail.tel3 IS '전화번호3';

CREATE UNIQUE INDEX PK_member_detail
	ON member_detail (
		id ASC
	);

ALTER TABLE member_detail
	ADD
		CONSTRAINT PK_member_detail
		PRIMARY KEY (
			id
		);

/* 맛집 */
CREATE TABLE STORE (
	STORE_SEQ NUMBER NOT NULL, /* 맛집seq */
	STORE_NAME VARCHAR2(30), /* 가게명 */
	STORE_PHONE VARCHAR2(20), /* 전화번호 */
	FOOD VARCHAR2(2000), /* 음식 */
	HOT_TASTE NUMBER, /* 매운맛 */
	SOUR_TASTE NUMBER, /* 시큼새큼 */
	CLEAN_TASTE NUMBER, /* 담백한 */
	SWEET_TASTE NUMBER, /* 달콤한 */
	FRESH_TASTE NUMBER, /* 신선한 */
	K_HOT_TASTE NUMBER /* 얼큰한 */
);

COMMENT ON TABLE STORE IS '맛집';

COMMENT ON COLUMN STORE.STORE_SEQ IS '맛집seq';

COMMENT ON COLUMN STORE.STORE_NAME IS '가게명';

COMMENT ON COLUMN STORE.STORE_PHONE IS '전화번호';

COMMENT ON COLUMN STORE.FOOD IS '음식';

COMMENT ON COLUMN STORE.HOT_TASTE IS '매운맛';

COMMENT ON COLUMN STORE.SOUR_TASTE IS '시큼새큼';

COMMENT ON COLUMN STORE.CLEAN_TASTE IS '담백한';

COMMENT ON COLUMN STORE.SWEET_TASTE IS '달콤한';

COMMENT ON COLUMN STORE.FRESH_TASTE IS '신선한';

COMMENT ON COLUMN STORE.K_HOT_TASTE IS '얼큰한';

CREATE UNIQUE INDEX PK_STORE
	ON STORE (
		STORE_SEQ ASC
	);

ALTER TABLE STORE
	ADD
		CONSTRAINT PK_STORE
		PRIMARY KEY (
			STORE_SEQ
		);

/* 검색 */
CREATE TABLE SEARCH (
	KEYWORD VARCHAR2(100), /* 키워드 */
	HIT NUMBER(10) /* 조회수 */
);

COMMENT ON TABLE SEARCH IS '검색';

COMMENT ON COLUMN SEARCH.KEYWORD IS '키워드';

COMMENT ON COLUMN SEARCH.HIT IS '조회수';

/* 댓글 */
CREATE TABLE REPLY (
	REPLY_SEQ NUMBER(30) NOT NULL, /* 댓글seq */
	STORE_SEQ NUMBER NOT NULL, /* 맛집seq */
	ID VARCHAR2(20), /* 작성자ID */
	CONTENT VARCHAR2(800), /* 내용 */
	LOGTIME DATE, /* 시간 */
	STAR NUMBER(1) /* 별점 */
);

COMMENT ON TABLE REPLY IS '댓글';

COMMENT ON COLUMN REPLY.REPLY_SEQ IS '댓글seq';

COMMENT ON COLUMN REPLY.STORE_SEQ IS '맛집seq';

COMMENT ON COLUMN REPLY.ID IS '작성자ID';

COMMENT ON COLUMN REPLY.CONTENT IS '내용';

COMMENT ON COLUMN REPLY.LOGTIME IS '시간';

COMMENT ON COLUMN REPLY.STAR IS '별점';

CREATE UNIQUE INDEX PK_REPLY
	ON REPLY (
		REPLY_SEQ ASC
	);

ALTER TABLE REPLY
	ADD
		CONSTRAINT PK_REPLY
		PRIMARY KEY (
			REPLY_SEQ
		);

/* 점수 */
CREATE TABLE SCORE (
	STORE_SEQ NUMBER, /* 맛집seq */
	BLOGCOUNT NUMBER(20), /* 블로그갯수 */
	USEREVALUATE VARCHAR2(30), /* 사용자평가 */
	FOODLIKE NUMBER(10), /* 좋아요 */
	GOODKEYWORD VARCHAR2(2000), /* 긍정적키워드 */
	BADKEYWORD VARCHAR2(2000) /* 부정적키워드 */
);

COMMENT ON TABLE SCORE IS '점수';

COMMENT ON COLUMN SCORE.STORE_SEQ IS '맛집seq';

COMMENT ON COLUMN SCORE.BLOGCOUNT IS '블로그갯수';

COMMENT ON COLUMN SCORE.USEREVALUATE IS '사용자평가';

COMMENT ON COLUMN SCORE.FOODLIKE IS '좋아요';

COMMENT ON COLUMN SCORE.GOODKEYWORD IS '긍정적키워드';

COMMENT ON COLUMN SCORE.BADKEYWORD IS '부정적키워드';

/* 좋아요 */
CREATE TABLE FOOD_LIKE (
	EMAIL VARCHAR2(100), /* 회원id */
	STORE_SEQ NUMBER /* 맛집seq */
);

COMMENT ON TABLE FOOD_LIKE IS '좋아요';

COMMENT ON COLUMN FOOD_LIKE.EMAIL IS '회원id';

COMMENT ON COLUMN FOOD_LIKE.STORE_SEQ IS '맛집seq';

/* 회원 */
CREATE TABLE MEMBER (
	EMAIL VARCHAR2(100) NOT NULL, /* 회원id */
	PASSWORD VARCHAR2(30), /* 비밀번호 */
	NAME VARCHAR2(30), /* 이름 */
	ADDRESS1 VARCHAR2(100), /* 주소1 */
	ADDRESS2 VARCHAR2(100), /* 주소2 */
	JOINDATE DATE /* 가입일 */
);

COMMENT ON TABLE MEMBER IS '회원';

COMMENT ON COLUMN MEMBER.EMAIL IS '회원id';

COMMENT ON COLUMN MEMBER.PASSWORD IS '비밀번호';

COMMENT ON COLUMN MEMBER.NAME IS '이름';

COMMENT ON COLUMN MEMBER.ADDRESS1 IS '주소1';

COMMENT ON COLUMN MEMBER.ADDRESS2 IS '주소2';

COMMENT ON COLUMN MEMBER.JOINDATE IS '가입일';

CREATE UNIQUE INDEX PK_MEMBER
	ON MEMBER (
		EMAIL ASC
	);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT PK_MEMBER
		PRIMARY KEY (
			EMAIL
		);

/* 선호도 */
CREATE TABLE PREFERENCE (
	EMAIL VARCHAR2(100), /* 회원id */
	FOOD VARCHAR2(2000), /* 음식 */
	HOT_TASTE NUMBER, /* 매운맛 */
	SOUR_TASTE NUMBER, /* 시큼새큼 */
	CLEAN_TASTE NUMBER, /* 담백한 */
	SWEET_TASTE NUMBER, /* 달콤한 */
	FRESH_TASTE NUMBER, /* 신선한 */
	K_HOT_TASTE NUMBER /* 얼큰한 */
);

COMMENT ON TABLE PREFERENCE IS '선호도';

COMMENT ON COLUMN PREFERENCE.EMAIL IS '회원id';

COMMENT ON COLUMN PREFERENCE.FOOD IS '음식';

COMMENT ON COLUMN PREFERENCE.HOT_TASTE IS '매운맛';

COMMENT ON COLUMN PREFERENCE.SOUR_TASTE IS '시큼새큼';

COMMENT ON COLUMN PREFERENCE.CLEAN_TASTE IS '담백한';

COMMENT ON COLUMN PREFERENCE.SWEET_TASTE IS '달콤한';

COMMENT ON COLUMN PREFERENCE.FRESH_TASTE IS '신선한';

COMMENT ON COLUMN PREFERENCE.K_HOT_TASTE IS '얼큰한';

ALTER TABLE member_detail
	ADD
		CONSTRAINT FK_TABLE_TO_member_detail
		FOREIGN KEY (
			id
		)
		REFERENCES TABLE (
			id
		);

ALTER TABLE REPLY
	ADD
		CONSTRAINT FK_STORE_TO_REPLY
		FOREIGN KEY (
			STORE_SEQ
		)
		REFERENCES STORE (
			STORE_SEQ
		);

ALTER TABLE SCORE
	ADD
		CONSTRAINT FK_STORE_TO_SCORE
		FOREIGN KEY (
			STORE_SEQ
		)
		REFERENCES STORE (
			STORE_SEQ
		);

ALTER TABLE FOOD_LIKE
	ADD
		CONSTRAINT FK_STORE_TO_FOOD_LIKE
		FOREIGN KEY (
			STORE_SEQ
		)
		REFERENCES STORE (
			STORE_SEQ
		);

ALTER TABLE FOOD_LIKE
	ADD
		CONSTRAINT FK_MEMBER_TO_FOOD_LIKE
		FOREIGN KEY (
			EMAIL
		)
		REFERENCES MEMBER (
			EMAIL
		);

ALTER TABLE PREFERENCE
	ADD
		CONSTRAINT FK_MEMBER_TO_PREFERENCE
		FOREIGN KEY (
			EMAIL
		)
		REFERENCES MEMBER (
			EMAIL
		);